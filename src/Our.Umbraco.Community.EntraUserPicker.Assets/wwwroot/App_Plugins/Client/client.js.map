{"version":3,"file":"client.js","sources":["../../../../Our.Umbraco.Community.EntraUserPicker.Client/Client/src/user/property-editor/user-picker/property-editor-ui-entra-user-picker.element.ts","../../../../Our.Umbraco.Community.EntraUserPicker.Client/Client/src/user/components/user-input/user-input.element.ts"],"sourcesContent":["import { LitElement, html, customElement, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbPropertyEditorUiElement } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { UmbPropertyEditorConfigCollection, UmbPropertyValueChangeEvent } from \"@umbraco-cms/backoffice/property-editor\";\r\n\r\n@customElement('property-editor-ui-entra-user-picker')\r\nexport default class PropertyEditorUIEntraUserPickerElement extends LitElement implements UmbPropertyEditorUiElement {\r\n    @property({ type: String })\r\n    public value = '';\r\n\r\n\r\n\t@property({ attribute: false })\r\n\tpublic config?: UmbPropertyEditorConfigCollection;\r\n\r\n\t#onChange(event: CustomEvent & { target: HTMLInputElement  }) {\r\n\t\tthis.value = event.target.value;\r\n\t\tthis.dispatchEvent(new UmbPropertyValueChangeEvent());\r\n\t}\r\n\r\n    override render() {\r\n\t\treturn html`\r\n\t\t\t<entra-user-input min=\"0\" max=\"1\" .value=${this.value ?? ''} @change=${this.#onChange}></entra-user-input>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'property-editor-ui-entra-user-picker': PropertyEditorUIEntraUserPickerElement;\r\n    }\r\n}\r\n","import type { UmbUserItemModel } from '@umbraco-cms/backoffice/user';\r\nimport { UmbUserPickerInputContext } from '@umbraco-cms/backoffice/user';\r\nimport { css, customElement, html, nothing, property, repeat, state } from '@umbraco-cms/backoffice/external/lit';\r\nimport { splitStringToArray } from '@umbraco-cms/backoffice/utils';\r\nimport { UmbChangeEvent } from '@umbraco-cms/backoffice/event';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { UmbSorterController } from '@umbraco-cms/backoffice/sorter';\r\nimport { UUIFormControlMixin } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n// TODO: Shall we rename to 'umb-input-user'? [LK]\r\n@customElement('entra-user-input')\r\nexport class EntraUserInputElement extends UUIFormControlMixin(UmbLitElement, '') {\r\n\t#sorter = new UmbSorterController<string>(this, {\r\n\t\tgetUniqueOfElement: (element) => {\r\n\t\t\treturn element.id;\r\n\t\t},\r\n\t\tgetUniqueOfModel: (modelEntry) => {\r\n\t\t\treturn modelEntry;\r\n\t\t},\r\n\t\tidentifier: 'Umb.SorterIdentifier.InputUser',\r\n\t\titemSelector: 'uui-ref-node-user',\r\n\t\tcontainerSelector: 'uui-ref-list',\r\n\t\tonChange: ({ model }) => {\r\n\t\t\tthis.selection = model;\r\n\t\t\tthis.dispatchEvent(new UmbChangeEvent());\r\n\t\t},\r\n\t});\r\n\r\n\t/**\r\n\t * This is a minimum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: Number })\r\n\tpublic get min(): number {\r\n\t\treturn this.#pickerContext.min;\r\n\t}\r\n\tpublic set min(value: number) {\r\n\t\tthis.#pickerContext.min = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Min validation message.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tminMessage = 'This field need more items';\r\n\r\n\t/**\r\n\t * This is a maximum amount of selected items in this input.\r\n\t * @type {number}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: Number })\r\n\tpublic get max(): number {\r\n\t\treturn this.#pickerContext.max;\r\n\t}\r\n\tpublic set max(value: number) {\r\n\t\tthis.#pickerContext.max = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Max validation message.\r\n\t * @type {boolean}\r\n\t * @attr\r\n\t * @default\r\n\t */\r\n\t@property({ type: String, attribute: 'min-message' })\r\n\tmaxMessage = 'This field exceeds the allowed amount of items';\r\n\r\n\t@property({ type: Array })\r\n\tpublic set selection(uniques: Array<string>) {\r\n\t\tthis.#pickerContext.setSelection(uniques);\r\n\t\tthis.#sorter.setModel(uniques);\r\n\t}\r\n\tpublic get selection(): Array<string> {\r\n\t\treturn this.#pickerContext.getSelection();\r\n\t}\r\n\r\n\t@property()\r\n\tpublic override set value(uniques: string) {\r\n\t\tthis.selection = splitStringToArray(uniques);\r\n\t}\r\n\tpublic override get value(): string {\r\n\t\treturn this.selection.join(',');\r\n\t}\r\n\r\n\t@state()\r\n\tprivate _items?: Array<UmbUserItemModel>;\r\n\r\n\t#pickerContext = new UmbUserPickerInputContext(this);\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeUnderflow',\r\n\t\t\t() => this.minMessage,\r\n\t\t\t() => !!this.min && this.#pickerContext.getSelection().length < this.min,\r\n\t\t);\r\n\r\n\t\tthis.addValidator(\r\n\t\t\t'rangeOverflow',\r\n\t\t\t() => this.maxMessage,\r\n\t\t\t() => !!this.max && this.#pickerContext.getSelection().length > this.max,\r\n\t\t);\r\n\r\n\t\tthis.observe(this.#pickerContext.selection, (selection) => (this.value = selection.join(',')), '_observeSelection');\r\n\t\tthis.observe(this.#pickerContext.selectedItems, (selectedItems) => (this._items = selectedItems), '_observerItems');\r\n\t}\r\n\r\n\tprotected override getFormElement() {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t#openPicker() {\r\n\t\tthis.#pickerContext.openPicker({});\r\n\t}\r\n\r\n\t#removeItem(item: UmbUserItemModel) {\r\n\t\tthis.#pickerContext.requestRemoveItem(item.unique);\r\n\t}\r\n\r\n\toverride render() {\r\n\t\treturn html`${this.#renderItems()} ${this.#renderAddButton()}`;\r\n\t}\r\n\r\n\t#renderAddButton() {\r\n\t\tif (this.max > 0 && this.selection.length >= this.max) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\tid=\"btn-add\"\r\n\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\tlabel=${this.localize.term('general_choose')}\r\n\t\t\t\t@click=${this.#openPicker}></uui-button>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItems() {\r\n\t\tif (!this._items) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-ref-list>\r\n\t\t\t\t${repeat(\r\n\t\t\t\t\tthis._items,\r\n\t\t\t\t\t(item) => item.unique,\r\n\t\t\t\t\t(item) => this.#renderItem(item),\r\n\t\t\t\t)}\r\n\t\t\t</uui-ref-list>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderItem(item: UmbUserItemModel) {\r\n\t\tif (!item.unique) return nothing;\r\n\t\treturn html`\r\n\t\t\t<uui-ref-node-user name=${item.name} id=${item.unique}>\r\n\t\t\t\t<umb-user-avatar\r\n\t\t\t\t\tslot=\"icon\"\r\n\t\t\t\t\t.name=${item.name}\r\n\t\t\t\t\t.imgUrls=${item.avatarUrls}></umb-user-avatar>\r\n\t\t\t\t<uui-action-bar slot=\"actions\">\r\n\t\t\t\t\t<uui-button label=${this.localize.term('general_remove')} @click=${() => this.#removeItem(item)}></uui-button>\r\n\t\t\t\t</uui-action-bar>\r\n\t\t\t</uui-ref-node-user>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tcss`\r\n\t\t\t#btn-add {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\r\n\t\t\tumb-user-avatar {\r\n\t\t\t\tfont-size: var(--uui-size-4);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default EntraUserInputElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'entra-user-input': EntraUserInputElement;\r\n\t}\r\n}\r\n"],"names":["_PropertyEditorUIEntraUserPickerElement_instances","onChange_fn","PropertyEditorUIEntraUserPickerElement","LitElement","__privateAdd","html","__privateMethod","event","UmbPropertyValueChangeEvent","__decorateClass","property","customElement","_sorter","_pickerContext","_EntraUserInputElement_instances","openPicker_fn","removeItem_fn","renderAddButton_fn","renderItems_fn","renderItem_fn","EntraUserInputElement","UUIFormControlMixin","UmbLitElement","UmbSorterController","element","modelEntry","model","UmbChangeEvent","UmbUserPickerInputContext","__privateGet","selection","selectedItems","value","uniques","splitStringToArray","item","nothing","repeat","css","state","EntraUserInputElement$1"],"mappings":"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"}